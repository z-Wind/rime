# zliu.schema.yaml
# encoding: utf-8
# 嘸蝦米輸入法（中文模式）
# Schema.yaml 詳解 https://github.com/LEOYoon-Tsaw/Rime_collections/blob/master/Rime_description.md

schema:
  name: 嘸蝦米
  schema_id: zliu
  version: 0.1
  author:
    - "發明人 劉重次"
  description: 嘸蝦米
  dependencies:
    - bopomofo_tw

switches:
  - name: ascii_mode
    # reset: 1
    states: ["中文", "英數"]
  - name: full_shape
    states: ["半形", "全形"]
  - name: zh_simp
    states: ["繁", "簡"]
  - name: ascii_punct
    reset: 0
    states: ["標點", "符號"]

engine:                    # 輸入引擎設定，即掛接組件的「處方」
  processors:              # 一、這批組件處理各類按鍵消息
    - ascii_composer       # ※ 處理西文模式及中西文切換
    - recognizer           # ※ 與 matcher 搭配，處理符合特定規則的輸入碼，如網址、反查等
    - key_binder           # ※ 在特定條件下將按鍵綁定到其他按鍵，如重定義逗號、句號爲候選翻頁鍵
    - speller              # ※ 拼寫處理器，接受字符按鍵，編輯輸入碼
    - punctuator           # ※ 句讀處理器，將單個字符按鍵直接映射爲文字符號
    - selector             # ※ 選字處理器，處理數字選字鍵、上、下候選定位、換頁鍵
    # - navigator            # ※ 處理輸入欄內的光標移動鍵
    - express_editor       # ※ 編輯器，處理空格、回車上屏、回退鍵等
    # - fluid_editor         # ※ 句式編輯器，用於以空格斷詞、回車上屏的【注音】、【語句流】等輸入方案，替換 express_editor
  segmentors:              # 二、這批組件識別不同內容類型，將輸入碼分段
    - ascii_segmentor      # ※ 標識西文段落
    - matcher              # ※ 標識符合特定規則的段落，如網址、反查等
    - abc_segmentor        # ※ 標識常規的文字段落
    - affix_segmentor@bopomofo # 用戶自定義tag
    - punct_segmentor      # ※ 標識句讀段落
    - fallback_segmentor   # ※ 標識其他未標識段落
  translators:             # 三、這批組件翻譯特定類型的編碼段爲一組候選文字
    # - echo_translator      # ※ 沒有其他候選字時，回顯輸入碼
    - punct_translator     # ※ 轉換標點符號
    - table_translator     # ※ 碼表翻譯器，用於倉頡、五筆等基於碼表的輸入方案，替換 script_translator
    - script_translator@bopomofo  # ※ 腳本翻譯器，用於拼音等基於音節表的輸入方案
  filters:                 # 四、這批組件過濾翻譯的結果
    - simplifier           # ※ 繁簡轉換
    - uniquifier           # ※ 過濾重複的候選字，有可能來自繁簡轉換
    - reverse_lookup_filter@bopomofo_reverse_lookup # 反查注音 

speller:
  alphabet: "abcdefghijklmnopqrstuvwxyz,.'[]"
  max_code_length: 5
  auto_select: false

translator:
  dictionary: zliu
  enable_charset_filter: true
  enable_encoder: false
  enable_commit_history: false
  enable_completion: true # 不提示後續按鍵的組字結果
  enable_sentence: false # 關閉連打組句。若要啟動的話需要打開 speller/delimiter 及 enable_user_dict
  enable_user_dict: false # 取消使用者字頻調整機制。若打開的話則無法維持候選字順序。
  preedit_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz,.'[]|ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ，．’〔〕"

bopomofo:
  tag: bopomofo
  prefix: "`"
  suffix: "'" # ; 鍵盤對應為 ㄤ
  dictionary: terra_pinyin
  prism: bopomofo_tw
  enable_completion: true
  preedit_format:
    - "xlit|1qaz2wsxedcrfv5tgbyhnujm8ik,9ol.0p;/- 6347'|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˉˊˇˋ˙ |"
  tips: 【注音反查】
  closing_tips: 【反查完成】

bopomofo_reverse_lookup:
  tags: [ bopomofo ]
  overwrite_comment: true  # 覆蓋其他提示
  dictionary: zliu
  comment_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz,.'[]|ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ，．’〔〕"

key_binder:
  bindings: 
    - { when: always, accept: Shift+space, toggle: full_shape }
    #- { when: always, accept: Control+Shift+4, toggle: zh_simp }
    - { when: has_menu, accept: space, send: space }
    - { when: composing, accept: space, send: Escape } # 注意語句流 fluid_editor
    - when:   has_menu
      accept: period
      send:   period

simplifier:
  opencc_config: t2s.json
  option_name: zh_simp
  tips: "char"     

punctuator:
  # import_preset: symbols
  import_preset: default

recognizer:
  import_preset: default 
  patterns:
    # punct: "^/([0-9]0?|[A-Za-z]+)$"
    bopomofo: "`[1qaz2wsxedcrfv5tgbyhnujm8ik,9ol.0p;/6347-]*'?$" # 「-」為「ㄦ」，移到最後面，讓正則可正確抓取
